% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmb-sim.R
\name{sdmTMB_simulate}
\alias{sdmTMB_simulate}
\title{Simulate from a spatial/spatiotemporal model}
\usage{
sdmTMB_simulate(
  formula,
  data,
  mesh,
  family = gaussian(link = "identity"),
  time = NULL,
  previous_fit = NULL,
  B = NULL,
  range = NULL,
  rho = NULL,
  sigma_O = NULL,
  sigma_E = NULL,
  sigma_Z = NULL,
  phi = NULL,
  tweedie_p = NULL,
  df = NULL,
  simulate_re = TRUE,
  seed = sample.int(1e+06, 1),
  ...
)
}
\arguments{
\item{formula}{A \emph{one-sided} formula describing the fixed-effect structure.}

\item{data}{A data frame containing the predictors described in \code{formula} and the
time column if \code{time} is specified.}

\item{mesh}{Output from \code{\link[=make_mesh]{make_mesh()}}.}

\item{family}{Family as in \code{\link[=sdmTMB]{sdmTMB()}}.}

\item{time}{The time column name.}

\item{previous_fit}{An optional previous \code{\link[=sdmTMB]{sdmTMB()}} fit to pull parameter values.
Will be over-ruled by any non-NULL specified parameter arguments.}

\item{B}{A vector of beta values (fixed-effect coefficient values).}

\item{range}{Parameter that controls the decay of spatial correlation. If a vector
of length 2, \code{share_range} will be set to \code{FALSE} and the spatial and spatiotemporal
ranges will be unique.}

\item{rho}{Spatiotemporal correlation between years; should be between -1 and
1.}

\item{sigma_O}{SD of spatial process (Omega).}

\item{sigma_E}{SD of spatiotemporal process (Epsilon).}

\item{sigma_Z}{SD of spatially varying coefficient field (Zeta).}

\item{phi}{Observation error scale parameter (e.g., SD in Gaussian).}

\item{tweedie_p}{Tweedie p (power) parameter; between 1 and 2.}

\item{df}{Student-t degrees of freedom.}

\item{simulate_re}{Include random effect simulation?}

\item{seed}{A value with which to set the random seed.}

\item{...}{Any other arguments to pass to \code{\link[=sdmTMB]{sdmTMB()}}.}
}
\value{
A data frame where:
\itemize{
\item The 1st column is the time variable (if present).
\item The 2nd and 3rd columns are the spatial coordinates.
\item \code{omega_s} represents the simulated spatial random effects.
\item \code{epsilon_st} represents the simulated spatiotemporal random effects.
\item \code{eta} is the true value in link space
\item \code{mu} is the true value in inverse link space.
\item \code{observed} represents the simulated process with observation error.
\item The remaining columns are the fixed-effect model matrix.
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This version (vs. \code{\link[=sdmTMB_sim]{sdmTMB_sim()}}) (1) uses TMB for simulation and is
therefore \strong{much} faster and more flexible, (2) is set up to take a formula and
a data frame and is therefore easier to use if you want different spatial
observations (and covariates) for each time slice. Eventually \code{\link[=sdmTMB_sim]{sdmTMB_sim()}}
will be depreciated in favour of this version.
}
\examples{
if (inla_installed()) {
  set.seed(123)
  # a1 is a fake predictor:
  predictor_dat <- data.frame(
    X = runif(300), Y = runif(300),
    a1 = rnorm(300), year = rep(1:6, each = 50)
  )
  mesh <- make_mesh(predictor_dat, xy_cols = c("X", "Y"), cutoff = 0.1)

  sim_dat <- sdmTMB_simulate(
    formula = ~ 1 + a1,
    data = predictor_dat,
    time = "year",
    mesh = mesh,
    family = gaussian(link = "identity"),
    range = 0.5,
    sigma_E = 0.1,
    phi = 0.1,
    sigma_O = 0.2,
    seed = 3542,
    B = c(0.2, -0.4) # B0 = intercept, B1 = a1 slope
  )

  fit <- sdmTMB(observed ~ a1, data = sim_dat, mesh = mesh, time = "year")
  fit

  # example of supplying random field values:
  p <- predict(fit, newdata = NULL)
  sim_dat2 <- sdmTMB_simulate(
    formula = ~ 1 + a1,
    data = predictor_dat,
    time = "year",
    mesh = mesh,
    family = gaussian(link = "identity"),
    omega_s = p$omega_s,
    epsilon_st = p$epsilon_st,
    phi = 0.1,
    seed = 342,
    B = c(0.1, -0.2) # B0 = intercept, B1 = a1 slope
  )

  if (require("ggplot2", quietly = TRUE)) {
    ggplot(sim_dat, aes(X, Y, colour = observed)) +
      geom_point() +
      facet_wrap(~year) +
      scale_color_gradient2()
  }
}
}
