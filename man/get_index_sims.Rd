% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get-index-sims.R
\name{get_index_sims}
\alias{get_index_sims}
\title{Calculate population index via simulation from joint precision matrix}
\usage{
get_index_sims(
  fit_obj,
  pred_obj,
  level = 0.95,
  return_sims = FALSE,
  est_function = stats::median,
  aggregate_function = function(x) sum(exp(x))
)
}
\arguments{
\item{fit_obj}{\code{\link[=sdmTMB]{sdmTMB()}} output}

\item{pred_obj}{\code{\link[=predict.sdmTMB]{predict.sdmTMB()}} output with \code{sims > 0}}

\item{level}{Tail quantile}

\item{return_sims}{Logical. Return simulation draws (vs. quantile summary).}

\item{est_function}{Function to summarize expected value. \code{mean()} would be
an alternative.}

\item{aggregate_function}{Function to summarize samples with each year.}
}
\description{
Calculate population index via simulation from joint precision matrix
}
\examples{
pcod_spde <- make_mesh(pcod, c("X", "Y"), cutoff = 30)
m <- sdmTMB(density ~ 0 + as.factor(year) + depth_scaled + depth_scaled2,
  data = pcod, spde = pcod_spde, family = tweedie(link = "log"),
  time = "year")
p <- predict(m, newdata = qcs_grid, sims = 100)
x <- get_index_sims(m, p)
library(ggplot2)
ggplot(x, aes(year, est, ymin = lwr, ymax = upr)) +
  geom_line() + geom_ribbon(alpha = 0.4)
x <- get_index_sims(m, p, return_sims = TRUE)
ggplot(x, aes(as.factor(year), .value)) + geom_violin()
}
