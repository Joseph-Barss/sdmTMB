% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dharma.R
\name{dharma_residuals}
\alias{dharma_residuals}
\title{DHARMa residuals}
\usage{
dharma_residuals(
  simulated_response,
  object,
  plot = TRUE,
  return_DHARMa = FALSE,
  ...
)
}
\arguments{
\item{simulated_response}{Output from \code{\link[=simulate.sdmTMB]{simulate.sdmTMB()}}.}

\item{object}{Output from \code{\link[=sdmTMB]{sdmTMB()}}.}

\item{plot}{Logical.}

\item{return_DHARMa}{Logical.}

\item{...}{Other arguments to pass to \code{\link[DHARMa:createDHARMa]{DHARMa::createDHARMa()}}.}
}
\value{
A data frame of observed and expected values is invisibly returned,
so you can set \code{plot = FALSE} and assign the output to an object if you wish
to plot the residuals yourself. See the examples.

If \code{return_DHARMa = TRUE}, the object from \code{DHARMa::createDHARMa()}
is returned and any subsequent \pkg{DHARMa} functions can be applied.
}
\description{
Plot (and possibly return) DHARMa residuals. This is a wrapper function
around \code{\link[DHARMa:createDHARMa]{DHARMa::createDHARMa()}} to facilitate its use with \code{\link[=sdmTMB]{sdmTMB()}} models.
}
\details{
\strong{Note:} It is recommended to set \code{type = "mle-mvn"} in
\code{\link[=residuals.sdmTMB]{residuals.sdmTMB()}} for the resulting residuals to have the
expected distribution. This is \emph{not} the default.
}
\examples{
\dontshow{if (requireNamespace("DHARMa", quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Try Tweedie family:
fit <- sdmTMB(density ~ as.factor(year) + s(depth, k = 3),
  data = pcod_2011, mesh = pcod_mesh_2011,
  family = tweedie(link = "log"), spatial = "on")

# The `simulated_response` argument is first so the output from
# simulate() can be piped to dharma_residuals():

# not great:
simulate(fit, nsim = 200, type = "mle-mvn") |>
  dharma_residuals(fit)

# delta-lognormal looks better:
fit_dl <- update(fit, family = delta_lognormal())
simulate(fit_dl, nsim = 200, type = "mle-mvn") |>
  dharma_residuals(fit)

# or skip the pipe:
s <- simulate(fit_dl, nsim = 200, type = "mle-mvn")
# and manually plot it:
r <- dharma_residuals(s, fit_dl, plot = FALSE)
head(r)
plot(r$expected, r$observed)
abline(0, 1)

# return the DHARMa object and work with the DHARMa methods
ret <- simulate(fit_dl, nsim = 200, type = "mle-mvn") |>
  dharma_residuals(fit, return_DHARMa = TRUE)
plot(ret)
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=simulate.sdmTMB]{simulate.sdmTMB()}}, \code{\link[=residuals.sdmTMB]{residuals.sdmTMB()}}
}
